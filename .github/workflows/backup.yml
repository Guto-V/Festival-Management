name: Automated Backup

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  backup:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only run on main branch
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      if: ${{ secrets.AWS_ACCESS_KEY_ID }}
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    - name: Download production database
      run: |
        # Add commands to download production database
        # This depends on your production setup
        echo "Downloading production data..."
    
    - name: Run backup script
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      run: |
        chmod +x scripts/backup.sh
        ./scripts/backup.sh
    
    - name: Upload backup artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backup-${{ github.run_id }}
        path: backups/
        retention-days: 30
    
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Automated Backup Failed',
            body: `The automated backup job failed on ${new Date().toISOString()}.\n\nRun ID: ${context.runId}\nWorkflow: ${context.workflow}`
          })